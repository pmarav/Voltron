{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miniala\\\\Pictures\\\\skjdksd\\\\frontend\\\\src\\\\pages\\\\client-data.js\";\nimport React, { Component } from 'react';\nimport Header from \"../elements/header\";\nimport Sidebar from \"../elements/clientsidebar\";\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { Button } from 'reactstrap';\nimport '../App.css';\nimport '../../node_modules/react-vis/dist/style.css';\nimport { Chart } from \"react-google-charts\";\nimport ToggleButton from 'react-toggle-button';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nconst areaString = `50Hertz CA\nAmprion CA\nAPG CA\nAST BZ\nAST CA\nAustria\nBelgium\nBosnia Herzegovina\nBulgaria\nCEPS BZ\nCEPS CA\nCGES BZ\nCGES CA\nCREOS CA\nCroatia\nCyprus\nCyprus TSO BZ\nCyprus TSO CA\nCzech Republic\nDE-AT-LU\nDenmark\nDK1  BZ\nDK2 BZ\nEirGrid CA\nElering BZ\nElering CA\nELES BZ\nELES CA\nElia BZ\nElia CA\nEMS BZ\nEMS CA\nEnerginet CA\nESO BZ\nESO CA\nEstonia\nFingrid BZ\nFingrid CA\nFinland\nFormer Yugoslav Republic of Macedonia\nFrance\nGermany\nGreece\nHOPS BZ\nHOPS CA\nHungary\nIPTO BZ\nIPTO CA\nIreland\nIT-Centre-North BZ\nIT-Centre-South BZ\nIT-North BZ\nIT-Sardinia BZ\nIT-Sicily BZ\nIT-South BZ\nItaly\nItaly CA\nLatvia\nLitgrid BZ\nLitgrid CA\nLithuania\nLuxembourg\nMAVIR BZ\nMAVIR CA\nMEPSO BZ\nMEPSO CA\nMontenegro\nNational Grid BZ\nNational Grid CA\nNetherlands\nNO1 BZ\nNO2 BZ\nNO3 BZ\nNO4 BZ\nNO5 BZ\nNorway\nNOS BiH BZ\nNOS BiH CA\nPoland\nPortugal\nPSE SA BZ\nPSE SA CA\nREE BZ\nREE CA\nREN BZ\nREN CA\nRomania\nRTE BZ\nRTE CA\nSE1 BZ\nSE2 BZ\nSE3 BZ\nSE4 BZ\nSEPS BZ\nSEPS CA\nSerbia\nSlovakia\nSlovenia\nSpain\nStatnett CA\nSvK CA\nSweden\nswissgrid BZ\nswissgrid CA\nSwitzerland\nTenneT GER CA\nTenneT NL BZ\nTenneT NL CA\nTranselectrica BZ\nTranselectrica CA\nTransnetBW CA\nUkraine\nUkraine BEI CA\nUkraine BZN\nUkraine IPS CA\n`;\nconst t = areaString.split('\\n');\nvar areaOption = [];\n\nfor (const x in t) {\n  areaOption.push({\n    value: t[x],\n    label: t[x]\n  });\n}\n\nconst productionTypes = `AC Link\nBiomass\nDC Link\nFossil Brown coal/Lignite\nFossil Coal-derived gas\nFossil Gas\nFossil Hard coal\nFossil Oil\nFossil Oil shale\nFossil Peat\nGeothermal\nHydro Pumped Storage\nHydro Run-of-river and poundage\nHydro Water Reservoir\nMarine\nNuclear\nOther\nOther renewable\nSolar\nSubstation\nTransformer\nWaste\nWind Offshore\nWind Onshore`;\nconst t2 = productionTypes.split('\\n');\nvar productionOption = [];\n\nfor (const x in t2) {\n  productionOption.push({\n    value: t2[x],\n    label: t2[x]\n  });\n}\n\nconst datasetOptions = [{\n  value: 'ActualTotalLoad',\n  label: 'Actual Total Load'\n}, {\n  value: 'AggregatedGenerationPerType',\n  label: 'Aggregated Generation'\n}, {\n  value: 'DayAheadTotalLoadForecast',\n  label: 'Day Ahead Total Load'\n}, {\n  value: 'ActualvsForecast',\n  label: 'Actual vs Forecast'\n}];\nconst typeOption = [{\n  value: 'Date',\n  label: 'Day'\n}, {\n  value: 'Month',\n  label: 'Month'\n}, {\n  value: 'Year',\n  label: 'Year'\n}];\nconst yearOption = [{\n  value: '2014',\n  label: '2014'\n}, {\n  value: '2015',\n  label: '2015'\n}, {\n  value: '2016',\n  label: '2016'\n}, {\n  value: '2017',\n  label: '2017'\n}, {\n  value: '2018',\n  label: '2018'\n}, {\n  value: '2019',\n  label: '2019'\n}, {\n  value: '2020',\n  label: '2020'\n}];\nvar monthOption = [{\n  value: '1',\n  label: '1'\n}, {\n  value: '2',\n  label: '2'\n}, {\n  value: '3',\n  label: '3'\n}, {\n  value: '4',\n  label: '4'\n}, {\n  value: '5',\n  label: '5'\n}, {\n  value: '6',\n  label: '6'\n}, {\n  value: '7',\n  label: '7'\n}, {\n  value: '8',\n  label: '8'\n}, {\n  value: '9',\n  label: '9'\n}, {\n  value: '10',\n  label: '10'\n}, {\n  value: '11',\n  label: '11'\n}, {\n  value: '12',\n  label: '12'\n}];\nvar dayOption = [];\n\nfor (var i = 1; i < 32; i++) {\n  dayOption.push({\n    value: i.toString(),\n    label: i.toString()\n  });\n}\n\nconst frequencyOption = [{\n  value: 'PT15M',\n  label: 'PT15M'\n}, {\n  value: 'PT30M',\n  label: 'PT30M'\n}, {\n  value: 'PT60M',\n  label: 'PT60M'\n}];\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataset: null,\n      type: null,\n      measurements: [],\n      titles: [],\n      year: null,\n      month: null,\n      day: null,\n      toDashboard: false,\n      isLoading: false,\n      frequency: null,\n      area: null,\n      prod: null,\n      noData: false,\n      data: false,\n      tableColumns: [],\n      displayChart: false,\n      displayToggle: false,\n      noQuota: false\n    };\n\n    this.createURL = () => {\n      const m = this.state.month ? '-' + this.state.month : '';\n      const d = this.state.day ? '-' + this.state.day : '';\n      const p = this.state.prod ? this.state.prod + '/' : '';\n      const url = 'https://localhost:8765/energy/api/' + this.state.dataset + '/' + this.state.area + '/' + p + this.state.frequency + '/' + this.state.type.toLowerCase() + '/' + this.state.year + m + d;\n      return encodeURI(url);\n    };\n\n    this.handleDatasetChange = selectedOption => {\n      this.setState({\n        dataset: selectedOption['value']\n      });\n    };\n\n    this.handleTypeChange = selectedOption => {\n      this.setState({\n        type: selectedOption['value']\n      });\n      if (selectedOption['value'] === 'Year') this.setState({\n        day: null,\n        month: null\n      });else if (selectedOption['value'] === 'Month') this.setState({\n        day: null\n      });\n    };\n\n    this.handleYearChange = selectedOption => {\n      this.setState({\n        year: selectedOption['value']\n      });\n    };\n\n    this.handleMonthChange = selectedOption => {\n      this.setState({\n        month: selectedOption['value']\n      });\n    };\n\n    this.handleDayChange = selectedOption => {\n      this.setState({\n        day: selectedOption['value']\n      });\n      this.setState({});\n    };\n\n    this.handleFrequencyChange = selectedOption => {\n      this.setState({\n        frequency: selectedOption['value']\n      });\n    };\n\n    this.handleAreaChange = selectedOption => {\n      this.setState({\n        area: selectedOption['value']\n      });\n    };\n\n    this.handleProductionChange = selectedOption => {\n      this.setState({\n        prod: selectedOption['value']\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        noData: false,\n        data: false\n      });\n      axios.get(this.createURL(), {\n        headers: {\n          'x-observatory-auth': this.token\n        }\n      }).then(response => {\n        const measurements = response.data;\n        this.setState({\n          measurements: measurements,\n          data: true\n        });\n        this.setState({\n          tableColumns: Object.keys(measurements['0'])\n        });\n        this.setState({\n          displayToggle: true\n        });\n      }).catch(error => {\n        try {\n          if (error.response.status === 403) this.setState({\n            noData: true\n          });\n          if (error.response.status === 402) this.setState({\n            noQuota: true\n          });\n        } catch (err) {\n          console.log(err);\n          console.log(error);\n        }\n      });\n    };\n\n    this.printTable = () => {\n      var rows = this.state.measurements;\n      let columns = [];\n      Object.keys(this.state.measurements['0']).map(x => {\n        columns.push({\n          dataField: x,\n          text: x\n        });\n      });\n      const pagination = paginationFactory({\n        sizePerPage: 5,\n        sizePerPageList: [{\n          text: '5',\n          value: 5\n        }, {\n          text: '10',\n          value: 10\n        }],\n        withFirstAndLast: false,\n        alwaysShowAllBtns: false\n      });\n      let res = React.createElement(BootstrapTable, {\n        keyField: \"id\",\n        data: rows,\n        columns: columns,\n        pagination: pagination,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      });\n      return res;\n    };\n\n    this.printChart = () => {\n      let xOffset = 2;\n      let yOffset = 1;\n      let xTitle = '';\n      let zTitle = '';\n      if (this.state.dataset === 'AggregatedGenerationPerType') xOffset++;else if (this.state.dataset === 'ActualvsForecast') {\n        xOffset = 3;\n        zTitle = 'Forecast';\n      }\n\n      if (this.state.type === 'Date') {\n        if (this.state.dataset !== 'ActualvsForecast') {\n          xOffset++;\n          yOffset++;\n        }\n\n        xTitle = 'Hour';\n      }\n\n      if (xTitle !== 'Hour') xTitle = Object.keys(this.state.measurements['0'])[Object.keys(this.state.measurements['0']).length - xOffset];\n      let yTitle = Object.keys(this.state.measurements['0'])[Object.keys(this.state.measurements['0']).length - yOffset];\n      let c = [];\n      c.push(xTitle);\n      c.push(yTitle);\n      if (zTitle !== '') c.push(zTitle);\n      let result = [c];\n\n      for (var x in this.state.measurements) {\n        let c = [];\n        let dateTimeKey = Object.keys(this.state.measurements[x])[Object.keys(this.state.measurements[x]).length - xOffset];\n        let dateTime = this.state.measurements[x][dateTimeKey];\n        if (this.state.day !== null) dateTime = new Date(dateTime).getHours();\n        c.push(dateTime);\n        let valueKey = Object.keys(this.state.measurements[x])[Object.keys(this.state.measurements[x]).length - yOffset];\n        let value = this.state.measurements[x][valueKey];\n        c.push(value);\n\n        if (this.state.dataset === 'ActualvsForecast') {\n          let valueKey = Object.keys(this.state.measurements[x])[Object.keys(this.state.measurements[x]).length - yOffset - 1];\n          let value = this.state.measurements[x][valueKey];\n          c.push(value);\n        }\n\n        result.push(c);\n      }\n\n      console.log(result);\n      let r = React.createElement(Chart, {\n        width: '1000',\n        height: '500px',\n        chartType: \"Bar\",\n        loader: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        }, \"Loading Chart\"),\n        data: result,\n        options: {\n          // Material design options\n          chart: {\n            title: yTitle,\n            subtitle: ''\n          }\n        } // For tests\n        ,\n        rootProps: {\n          'data-testid': '2'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      });\n      return r;\n    };\n\n    this.token = sessionStorage.getItem('token');\n  }\n\n  render() {\n    if (this.state.toDashboard === true) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      });\n    }\n\n    const datasetSelect = React.createElement(Select, {\n      onChange: this.handleDatasetChange,\n      options: datasetOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    });\n    const typeSelect = React.createElement(Select, {\n      onChange: this.handleTypeChange,\n      options: typeOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    });\n    const yearSelect = React.createElement(Select, {\n      onChange: this.handleYearChange,\n      options: yearOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    });\n    const monthSelect = React.createElement(Select, {\n      onChange: this.handleMonthChange,\n      options: monthOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    });\n    const daySelect = React.createElement(Select, {\n      onChange: this.handleDayChange,\n      options: dayOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    });\n    const frequencySelect = React.createElement(Select, {\n      onChange: this.handleFrequencyChange,\n      options: frequencyOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    });\n    const areaSelect = React.createElement(Select, {\n      onChange: this.handleAreaChange,\n      options: areaOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      },\n      __self: this\n    });\n    const productionTypeSelect = React.createElement(Select, {\n      onChange: this.handleProductionChange,\n      options: productionOption,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    });\n    const data = [{\n      x: 0,\n      y: 8\n    }, {\n      x: 1,\n      y: 5\n    }, {\n      x: 2,\n      y: 4\n    }, {\n      x: 3,\n      y: 9\n    }, {\n      x: 4,\n      y: 1\n    }, {\n      x: 5,\n      y: 7\n    }, {\n      x: 6,\n      y: 6\n    }, {\n      x: 7,\n      y: 3\n    }, {\n      x: 8,\n      y: 2\n    }, {\n      x: 9,\n      y: 0\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"content-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, datasetSelect, this.state.dataset !== null ? areaSelect : null, this.state.dataset !== null && this.state.dataset === 'AggregatedGenerationPerType' ? productionTypeSelect : null, this.state.dataset !== null ? frequencySelect : null, this.state.dataset !== null ? typeSelect : null, this.state.type !== null ? yearSelect : null, this.state.type !== null && (this.state.type === 'Date' || this.state.type === 'Month') ? monthSelect : null, this.state.type !== null && this.state.type === 'Date' ? daySelect : null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"dark\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \"Search\"), this.state.displayToggle ? React.createElement(ToggleButton, {\n      value: this.state.displayChart || false,\n      onToggle: value => {\n        this.setState({\n          displayChart: !value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }) : null, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }), this.state.noData ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, \"No Data\") : null, this.state.noQuota ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \"No Quota\") : null, React.createElement(\"div\", {\n      class: \"wrapperClasses\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480\n      },\n      __self: this\n    }, this.state.data && !this.state.displayChart ? this.printTable() : null), this.state.data && this.state.displayChart ? this.printChart() : null))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Miniala/Pictures/skjdksd/frontend/src/pages/client-data.js"],"names":["React","Component","Header","Sidebar","Link","Redirect","axios","Select","Button","Chart","ToggleButton","paginationFactory","BootstrapTable","areaString","t","split","areaOption","x","push","value","label","productionTypes","t2","productionOption","datasetOptions","typeOption","yearOption","monthOption","dayOption","i","toString","frequencyOption","Index","constructor","props","state","dataset","type","measurements","titles","year","month","day","toDashboard","isLoading","frequency","area","prod","noData","data","tableColumns","displayChart","displayToggle","noQuota","createURL","m","d","p","url","toLowerCase","encodeURI","handleDatasetChange","selectedOption","setState","handleTypeChange","handleYearChange","handleMonthChange","handleDayChange","handleFrequencyChange","handleAreaChange","handleProductionChange","handleSubmit","e","get","headers","token","then","response","Object","keys","catch","error","status","err","console","log","printTable","rows","columns","map","dataField","text","pagination","sizePerPage","sizePerPageList","withFirstAndLast","alwaysShowAllBtns","res","printChart","xOffset","yOffset","xTitle","zTitle","length","yTitle","c","result","dateTimeKey","dateTime","Date","getHours","valueKey","r","chart","title","subtitle","sessionStorage","getItem","render","datasetSelect","typeSelect","yearSelect","monthSelect","daySelect","frequencySelect","areaSelect","productionTypeSelect","y"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,YAAP;AACA,OAAO,6CAAP;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAO,gEAAP;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,MAAMC,UAAU,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAApB;AAqHA,MAAMC,CAAC,GAAGD,UAAU,CAACE,KAAX,CAAiB,IAAjB,CAAV;AAEA,IAAIC,UAAU,GAAC,EAAf;;AACA,KAAK,MAAMC,CAAX,IAAgBH,CAAhB,EAAkB;AACdE,EAAAA,UAAU,CAACE,IAAX,CAAiB;AAACC,IAAAA,KAAK,EAACL,CAAC,CAACG,CAAD,CAAR;AAAcG,IAAAA,KAAK,EAACN,CAAC,CAACG,CAAD;AAArB,GAAjB;AACH;;AAED,MAAMI,eAAe,GAAI;;;;;;;;;;;;;;;;;;;;;;;aAAzB;AAyBA,MAAMC,EAAE,GAAGD,eAAe,CAACN,KAAhB,CAAsB,IAAtB,CAAX;AACA,IAAIQ,gBAAgB,GAAC,EAArB;;AACA,KAAK,MAAMN,CAAX,IAAgBK,EAAhB,EAAmB;AACfC,EAAAA,gBAAgB,CAACL,IAAjB,CAAuB;AAACC,IAAAA,KAAK,EAACG,EAAE,CAACL,CAAD,CAAT;AAAeG,IAAAA,KAAK,EAACE,EAAE,CAACL,CAAD;AAAvB,GAAvB;AACH;;AAED,MAAMO,cAAc,GAAG,CACnB;AAAEL,EAAAA,KAAK,EAAE,iBAAT;AAA4BC,EAAAA,KAAK,EAAE;AAAnC,CADmB,EAEnB;AAAED,EAAAA,KAAK,EAAE,6BAAT;AAAwCC,EAAAA,KAAK,EAAE;AAA/C,CAFmB,EAGnB;AAAED,EAAAA,KAAK,EAAE,2BAAT;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAHmB,EAInB;AAAED,EAAAA,KAAK,EAAE,kBAAT;AAA6BC,EAAAA,KAAK,EAAE;AAApC,CAJmB,CAAvB;AAOA,MAAMK,UAAU,GAAG,CACf;AAAEN,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CADe,EAEf;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAFe,EAGf;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAHe,CAAnB;AAMA,MAAMM,UAAU,GAAG,CACf;AAAEP,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CADe,EAEf;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAFe,EAGf;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAHe,EAIf;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAJe,EAKf;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CALe,EAMf;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CANe,EAOf;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAPe,CAAnB;AAUA,IAAIO,WAAW,GAAG,CACd;AAAER,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,KAAK,EAAE;AAArB,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAHc,EAId;AAAED,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAJc,EAKd;AAAED,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,KAAK,EAAE;AAArB,CALc,EAMd;AAAED,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,KAAK,EAAE;AAArB,CANc,EAOd;AAAED,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,KAAK,EAAE;AAArB,CAPc,EAQd;AAAED,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,KAAK,EAAE;AAArB,CARc,EASd;AAAED,EAAAA,KAAK,EAAE,GAAT;AAAcC,EAAAA,KAAK,EAAE;AAArB,CATc,EAUd;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAVc,EAWd;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAXc,EAYd;AAAED,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAZc,CAAlB;AAcA,IAAIQ,SAAS,GAAC,EAAd;;AACA,KAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAC,EAAf,EAAkBA,CAAC,EAAnB,EAAsB;AAClBD,EAAAA,SAAS,CAACV,IAAV,CAAgB;AAACC,IAAAA,KAAK,EAACU,CAAC,CAACC,QAAF,EAAP;AAAsBV,IAAAA,KAAK,EAACS,CAAC,CAACC,QAAF;AAA5B,GAAhB;AACH;;AAED,MAAMC,eAAe,GAAG,CACpB;AAAEZ,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CADoB,EAEpB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAFoB,EAGpB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAHoB,CAAxB;AAUA,eAAe,MAAMY,KAAN,SAAoB/B,SAApB,CAA8B;AAwFzCgC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAvFnBC,KAuFmB,GAvFX;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,IAAI,EAAE,IAFF;AAGJC,MAAAA,YAAY,EAAE,EAHV;AAIJC,MAAAA,MAAM,EAAG,EAJL;AAKJC,MAAAA,IAAI,EAAE,IALF;AAMJC,MAAAA,KAAK,EAAE,IANH;AAOJC,MAAAA,GAAG,EAAE,IAPD;AAQJC,MAAAA,WAAW,EAAE,KART;AASJC,MAAAA,SAAS,EAAE,KATP;AAUJC,MAAAA,SAAS,EAAE,IAVP;AAWJC,MAAAA,IAAI,EAAG,IAXH;AAYJC,MAAAA,IAAI,EAAG,IAZH;AAaJC,MAAAA,MAAM,EAAG,KAbL;AAcJC,MAAAA,IAAI,EAAG,KAdH;AAeJC,MAAAA,YAAY,EAAG,EAfX;AAgBJC,MAAAA,YAAY,EAAG,KAhBX;AAiBJC,MAAAA,aAAa,EAAG,KAjBZ;AAkBJC,MAAAA,OAAO,EAAG;AAlBN,KAuFW;;AAAA,SAlEnBC,SAkEmB,GAlEP,MAAK;AACb,YAAMC,CAAC,GAAG,KAAKpB,KAAL,CAAWM,KAAX,GAAmB,MAAI,KAAKN,KAAL,CAAWM,KAAlC,GAA0C,EAApD;AACA,YAAMe,CAAC,GAAG,KAAKrB,KAAL,CAAWO,GAAX,GAAiB,MAAI,KAAKP,KAAL,CAAWO,GAAhC,GAAsC,EAAhD;AACA,YAAMe,CAAC,GAAG,KAAKtB,KAAL,CAAWY,IAAX,GAAkB,KAAKZ,KAAL,CAAWY,IAAX,GAAgB,GAAlC,GAAuC,EAAjD;AACA,YAAMW,GAAG,GAAG,uCAAqC,KAAKvB,KAAL,CAAWC,OAAhD,GAAwD,GAAxD,GAA4D,KAAKD,KAAL,CAAWW,IAAvE,GAA4E,GAA5E,GAAgFW,CAAhF,GAAkF,KAAKtB,KAAL,CAAWU,SAA7F,GAAuG,GAAvG,GAA2G,KAAKV,KAAL,CAAWE,IAAX,CAAgBsB,WAAhB,EAA3G,GAAyI,GAAzI,GAA6I,KAAKxB,KAAL,CAAWK,IAAxJ,GAA6Je,CAA7J,GAA+JC,CAA3K;AACA,aAAOI,SAAS,CAACF,GAAD,CAAhB;AACH,KA4DkB;;AAAA,SA1DnBG,mBA0DmB,GA1DGC,cAAc,IAAI;AACpC,WAAKC,QAAL,CAAc;AAAE3B,QAAAA,OAAO,EAAC0B,cAAc,CAAC,OAAD;AAAxB,OAAd;AACH,KAwDkB;;AAAA,SAtDnBE,gBAsDmB,GAtDAF,cAAc,IAAI;AACjC,WAAKC,QAAL,CAAc;AAAE1B,QAAAA,IAAI,EAACyB,cAAc,CAAC,OAAD;AAArB,OAAd;AACA,UAAGA,cAAc,CAAC,OAAD,CAAd,KAA4B,MAA/B,EACI,KAAKC,QAAL,CAAc;AAAErB,QAAAA,GAAG,EAAC,IAAN;AAAWD,QAAAA,KAAK,EAAC;AAAjB,OAAd,EADJ,KAEK,IAAIqB,cAAc,CAAC,OAAD,CAAd,KAA4B,OAAhC,EACD,KAAKC,QAAL,CAAc;AAAErB,QAAAA,GAAG,EAAC;AAAN,OAAd;AACP,KAgDkB;;AAAA,SA9CnBuB,gBA8CmB,GA9CAH,cAAc,IAAI;AACjC,WAAKC,QAAL,CAAc;AAAEvB,QAAAA,IAAI,EAACsB,cAAc,CAAC,OAAD;AAArB,OAAd;AACH,KA4CkB;;AAAA,SA1CnBI,iBA0CmB,GA1CCJ,cAAc,IAAI;AAClC,WAAKC,QAAL,CAAc;AAAEtB,QAAAA,KAAK,EAACqB,cAAc,CAAC,OAAD;AAAtB,OAAd;AACH,KAwCkB;;AAAA,SAtCnBK,eAsCmB,GAtCDL,cAAc,IAAI;AAChC,WAAKC,QAAL,CAAc;AAAErB,QAAAA,GAAG,EAACoB,cAAc,CAAC,OAAD;AAApB,OAAd;AACA,WAAKC,QAAL,CAAc,EAAd;AACH,KAmCkB;;AAAA,SAjCnBK,qBAiCmB,GAjCKN,cAAc,IAAI;AACtC,WAAKC,QAAL,CAAc;AAAElB,QAAAA,SAAS,EAACiB,cAAc,CAAC,OAAD;AAA1B,OAAd;AACH,KA+BkB;;AAAA,SA7BnBO,gBA6BmB,GA7BAP,cAAc,IAAI;AACjC,WAAKC,QAAL,CAAc;AAAEjB,QAAAA,IAAI,EAACgB,cAAc,CAAC,OAAD;AAArB,OAAd;AACH,KA2BkB;;AAAA,SAzBnBQ,sBAyBmB,GAzBMR,cAAc,IAAI;AACvC,WAAKC,QAAL,CAAc;AAAEhB,QAAAA,IAAI,EAACe,cAAc,CAAC,OAAD;AAArB,OAAd;AACH,KAuBkB;;AAAA,SArBnBS,YAqBmB,GArBJC,CAAC,IAAI;AAChB,WAAKT,QAAL,CAAc;AAAEf,QAAAA,MAAM,EAAG,KAAX;AAAmBC,QAAAA,IAAI,EAAG;AAA1B,OAAd;AACA3C,MAAAA,KAAK,CAACmE,GAAN,CAAU,KAAKnB,SAAL,EAAV,EAA6B;AAAEoB,QAAAA,OAAO,EAAE;AAAE,gCAAsB,KAAKC;AAA7B;AAAX,OAA7B,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,cAAMvC,YAAY,GAAGuC,QAAQ,CAAC5B,IAA9B;AACA,aAAKc,QAAL,CAAc;AAACzB,UAAAA,YAAY,EAAGA,YAAhB;AAA+BW,UAAAA,IAAI,EAAG;AAAtC,SAAd;AACA,aAAKc,QAAL,CAAc;AAAEb,UAAAA,YAAY,EAAG4B,MAAM,CAACC,IAAP,CAAYzC,YAAY,CAAC,GAAD,CAAxB;AAAjB,SAAd;AACA,aAAKyB,QAAL,CAAc;AAACX,UAAAA,aAAa,EAAG;AAAjB,SAAd;AACH,OANL,EAOK4B,KAPL,CAOWC,KAAK,IAAI;AACZ,YAAG;AACC,cAAGA,KAAK,CAACJ,QAAN,CAAeK,MAAf,KAA0B,GAA7B,EAAkC,KAAKnB,QAAL,CAAc;AAAEf,YAAAA,MAAM,EAAG;AAAX,WAAd;AAClC,cAAGiC,KAAK,CAACJ,QAAN,CAAeK,MAAf,KAA0B,GAA7B,EAAkC,KAAKnB,QAAL,CAAc;AAAEV,YAAAA,OAAO,EAAG;AAAZ,WAAd;AACrC,SAHD,CAIA,OAAM8B,GAAN,EAAU;AACNC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;AACJ,OAhBL;AAiBH,KAEkB;;AAAA,SAKnBK,UALmB,GAKN,MAAI;AACb,UAAIC,IAAI,GAAG,KAAKpD,KAAL,CAAWG,YAAtB;AACA,UAAIkD,OAAO,GAAG,EAAd;AACAV,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAK5C,KAAL,CAAWG,YAAX,CAAwB,GAAxB,CAAZ,EAA0CmD,GAA1C,CAA8CxE,CAAC,IAAE;AAC7CuE,QAAAA,OAAO,CAACtE,IAAR,CAAa;AAAEwE,UAAAA,SAAS,EAACzE,CAAZ;AAAgB0E,UAAAA,IAAI,EAAC1E;AAArB,SAAb;AACH,OAFD;AAGA,YAAM2E,UAAU,GAAGjF,iBAAiB,CAAC;AACjCkF,QAAAA,WAAW,EAAE,CADoB;AAEjCC,QAAAA,eAAe,EAAC,CACZ;AAACH,UAAAA,IAAI,EAAE,GAAP;AAAYxE,UAAAA,KAAK,EAAE;AAAnB,SADY,EAEZ;AAACwE,UAAAA,IAAI,EAAE,IAAP;AAAaxE,UAAAA,KAAK,EAAE;AAApB,SAFY,CAFiB;AAMjC4E,QAAAA,gBAAgB,EAAC,KANgB;AAOjCC,QAAAA,iBAAiB,EAAC;AAPe,OAAD,CAApC;AAUA,UAAIC,GAAG,GAAG,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,IAAzB;AAA8B,QAAA,IAAI,EAAEV,IAApC;AAA0C,QAAA,OAAO,EAAEC,OAAnD;AAA4D,QAAA,UAAU,EAAGI,UAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACA,aAAOK,GAAP;AACH,KAvBkB;;AAAA,SAyBnBC,UAzBmB,GAyBN,MAAK;AACd,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,MAAM,GAAC,EAAX;AAEA,UAAG,KAAKnE,KAAL,CAAWC,OAAX,KAAqB,6BAAxB,EACI+D,OAAO,GADX,KAEK,IAAG,KAAKhE,KAAL,CAAWC,OAAX,KAAqB,kBAAxB,EAA2C;AAC5C+D,QAAAA,OAAO,GAAC,CAAR;AACAG,QAAAA,MAAM,GAAG,UAAT;AACH;;AACD,UAAI,KAAKnE,KAAL,CAAWE,IAAX,KAAoB,MAAxB,EAA+B;AAC3B,YAAG,KAAKF,KAAL,CAAWC,OAAX,KAAuB,kBAA1B,EAA6C;AACzC+D,UAAAA,OAAO;AACPC,UAAAA,OAAO;AACV;;AACDC,QAAAA,MAAM,GAAC,MAAP;AACH;;AACD,UAAGA,MAAM,KAAG,MAAZ,EACIA,MAAM,GAAGvB,MAAM,CAACC,IAAP,CAAY,KAAK5C,KAAL,CAAWG,YAAX,CAAwB,GAAxB,CAAZ,EAA0CwC,MAAM,CAACC,IAAP,CAAY,KAAK5C,KAAL,CAAWG,YAAX,CAAwB,GAAxB,CAAZ,EAA0CiE,MAA1C,GAAiDJ,OAA3F,CAAT;AACJ,UAAIK,MAAM,GAAG1B,MAAM,CAACC,IAAP,CAAY,KAAK5C,KAAL,CAAWG,YAAX,CAAwB,GAAxB,CAAZ,EAA0CwC,MAAM,CAACC,IAAP,CAAY,KAAK5C,KAAL,CAAWG,YAAX,CAAwB,GAAxB,CAAZ,EAA0CiE,MAA1C,GAAiDH,OAA3F,CAAb;AACA,UAAIK,CAAC,GAAG,EAAR;AACAA,MAAAA,CAAC,CAACvF,IAAF,CAAOmF,MAAP;AACAI,MAAAA,CAAC,CAACvF,IAAF,CAAOsF,MAAP;AACA,UAAGF,MAAM,KAAG,EAAZ,EAAgBG,CAAC,CAACvF,IAAF,CAAOoF,MAAP;AAChB,UAAII,MAAM,GAAC,CAACD,CAAD,CAAX;;AAEA,WAAI,IAAIxF,CAAR,IAAa,KAAKkB,KAAL,CAAWG,YAAxB,EAAqC;AACjC,YAAImE,CAAC,GAAG,EAAR;AACA,YAAIE,WAAW,GAAG7B,MAAM,CAACC,IAAP,CAAY,KAAK5C,KAAL,CAAWG,YAAX,CAAwBrB,CAAxB,CAAZ,EAAwC6D,MAAM,CAACC,IAAP,CAAY,KAAK5C,KAAL,CAAWG,YAAX,CAAwBrB,CAAxB,CAAZ,EAAwCsF,MAAxC,GAA+CJ,OAAvF,CAAlB;AACA,YAAIS,QAAQ,GAAG,KAAKzE,KAAL,CAAWG,YAAX,CAAwBrB,CAAxB,EAA2B0F,WAA3B,CAAf;AACA,YAAG,KAAKxE,KAAL,CAAWO,GAAX,KAAmB,IAAtB,EAA4BkE,QAAQ,GAAG,IAAIC,IAAJ,CAASD,QAAT,EAAmBE,QAAnB,EAAX;AAC5BL,QAAAA,CAAC,CAACvF,IAAF,CAAO0F,QAAP;AACA,YAAIG,QAAQ,GAAGjC,MAAM,CAACC,IAAP,CAAY,KAAK5C,KAAL,CAAWG,YAAX,CAAwBrB,CAAxB,CAAZ,EAAwC6D,MAAM,CAACC,IAAP,CAAY,KAAK5C,KAAL,CAAWG,YAAX,CAAwBrB,CAAxB,CAAZ,EAAwCsF,MAAxC,GAA+CH,OAAvF,CAAf;AACA,YAAIjF,KAAK,GAAG,KAAKgB,KAAL,CAAWG,YAAX,CAAwBrB,CAAxB,EAA2B8F,QAA3B,CAAZ;AACAN,QAAAA,CAAC,CAACvF,IAAF,CAAOC,KAAP;;AACA,YAAG,KAAKgB,KAAL,CAAWC,OAAX,KAAuB,kBAA1B,EAA6C;AACzC,cAAI2E,QAAQ,GAAGjC,MAAM,CAACC,IAAP,CAAY,KAAK5C,KAAL,CAAWG,YAAX,CAAwBrB,CAAxB,CAAZ,EAAwC6D,MAAM,CAACC,IAAP,CAAY,KAAK5C,KAAL,CAAWG,YAAX,CAAwBrB,CAAxB,CAAZ,EAAwCsF,MAAxC,GAA+CH,OAA/C,GAAuD,CAA/F,CAAf;AACA,cAAIjF,KAAK,GAAG,KAAKgB,KAAL,CAAWG,YAAX,CAAwBrB,CAAxB,EAA2B8F,QAA3B,CAAZ;AACAN,UAAAA,CAAC,CAACvF,IAAF,CAAOC,KAAP;AACH;;AACDuF,QAAAA,MAAM,CAACxF,IAAP,CAAauF,CAAb;AACH;;AACDrB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,MAAZ;AACA,UAAIM,CAAC,GAAG,oBAAC,KAAD;AACR,QAAA,KAAK,EAAE,MADC;AAER,QAAA,MAAM,EAAE,OAFA;AAGR,QAAA,SAAS,EAAC,KAHF;AAIR,QAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJA;AAKR,QAAA,IAAI,EAAEN,MALE;AAMR,QAAA,OAAO,EAAE;AACL;AACAO,UAAAA,KAAK,EAAE;AACPC,YAAAA,KAAK,EAAEV,MADA;AAEPW,YAAAA,QAAQ,EAAE;AAFH;AAFF,SAND,CAaR;AAbQ;AAcR,QAAA,SAAS,EAAE;AAAE,yBAAe;AAAjB,SAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAgBA,aAAOH,CAAP;AACH,KAvFkB;;AAEf,SAAKrC,KAAL,GAAayC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAb;AACH;;AAsFDC,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKnF,KAAL,CAAWQ,WAAX,KAA2B,IAA/B,EAAqC;AACjC,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAGD,UAAM4E,aAAa,GAAE,oBAAC,MAAD;AACrB,MAAA,QAAQ,EAAE,KAAK1D,mBADM;AAErB,MAAA,OAAO,EAAErC,cAFY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB;AAIA,UAAMgG,UAAU,GAAG,oBAAC,MAAD;AACnB,MAAA,QAAQ,EAAE,KAAKxD,gBADI;AAEnB,MAAA,OAAO,EAAEvC,UAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;AAIA,UAAMgG,UAAU,GAAG,oBAAC,MAAD;AACnB,MAAA,QAAQ,EAAE,KAAKxD,gBADI;AAEnB,MAAA,OAAO,EAAEvC,UAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;AAIA,UAAMgG,WAAW,GAAG,oBAAC,MAAD;AACpB,MAAA,QAAQ,EAAE,KAAKxD,iBADK;AAEpB,MAAA,OAAO,EAAEvC,WAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAIA,UAAMgG,SAAS,GAAG,oBAAC,MAAD;AAClB,MAAA,QAAQ,EAAE,KAAKxD,eADG;AAElB,MAAA,OAAO,EAAEvC,SAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB;AAIA,UAAMgG,eAAe,GAAG,oBAAC,MAAD;AACxB,MAAA,QAAQ,EAAE,KAAKxD,qBADS;AAExB,MAAA,OAAO,EAAErC,eAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB;AAIA,UAAM8F,UAAU,GAAG,oBAAC,MAAD;AACnB,MAAA,QAAQ,EAAE,KAAKxD,gBADI;AAEnB,MAAA,OAAO,EAAErD,UAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB;AAIA,UAAM8G,oBAAoB,GAAG,oBAAC,MAAD;AAC7B,MAAA,QAAQ,EAAE,KAAKxD,sBADc;AAE7B,MAAA,OAAO,EAAE/C,gBAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B;AAKA,UAAM0B,IAAI,GAAG,CACT;AAAChC,MAAAA,CAAC,EAAE,CAAJ;AAAO8G,MAAAA,CAAC,EAAE;AAAV,KADS,EAET;AAAC9G,MAAAA,CAAC,EAAE,CAAJ;AAAO8G,MAAAA,CAAC,EAAE;AAAV,KAFS,EAGT;AAAC9G,MAAAA,CAAC,EAAE,CAAJ;AAAO8G,MAAAA,CAAC,EAAE;AAAV,KAHS,EAIT;AAAC9G,MAAAA,CAAC,EAAE,CAAJ;AAAO8G,MAAAA,CAAC,EAAE;AAAV,KAJS,EAKT;AAAC9G,MAAAA,CAAC,EAAE,CAAJ;AAAO8G,MAAAA,CAAC,EAAE;AAAV,KALS,EAMT;AAAC9G,MAAAA,CAAC,EAAE,CAAJ;AAAO8G,MAAAA,CAAC,EAAE;AAAV,KANS,EAOT;AAAC9G,MAAAA,CAAC,EAAE,CAAJ;AAAO8G,MAAAA,CAAC,EAAE;AAAV,KAPS,EAQT;AAAC9G,MAAAA,CAAC,EAAE,CAAJ;AAAO8G,MAAAA,CAAC,EAAE;AAAV,KARS,EAST;AAAC9G,MAAAA,CAAC,EAAE,CAAJ;AAAO8G,MAAAA,CAAC,EAAE;AAAV,KATS,EAUT;AAAC9G,MAAAA,CAAC,EAAE,CAAJ;AAAO8G,MAAAA,CAAC,EAAE;AAAV,KAVS,CAAb;AAaA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCR,aADD,EAEC,KAAKpF,KAAL,CAAWC,OAAX,KAAsB,IAAtB,GAA6ByF,UAA7B,GAA0C,IAF3C,EAGC,KAAK1F,KAAL,CAAWC,OAAX,KAAsB,IAAtB,IAA8B,KAAKD,KAAL,CAAWC,OAAX,KAAuB,6BAArD,GAAqF0F,oBAArF,GAA4G,IAH7G,EAIC,KAAK3F,KAAL,CAAWC,OAAX,KAAuB,IAAvB,GAA8BwF,eAA9B,GAAgD,IAJjD,EAKC,KAAKzF,KAAL,CAAWC,OAAX,KAAuB,IAAvB,GAA8BoF,UAA9B,GAA2C,IAL5C,EAMC,KAAKrF,KAAL,CAAWE,IAAX,KAAoB,IAApB,GAA2BoF,UAA3B,GAAwC,IANzC,EAOC,KAAKtF,KAAL,CAAWE,IAAX,KAAmB,IAAnB,KAA4B,KAAKF,KAAL,CAAWE,IAAX,KAAoB,MAApB,IAA8B,KAAKF,KAAL,CAAWE,IAAX,KAAoB,OAA9E,IAAyFqF,WAAzF,GAAuG,IAPxG,EAQC,KAAKvF,KAAL,CAAWE,IAAX,KAAmB,IAAnB,IAA2B,KAAKF,KAAL,CAAWE,IAAX,KAAoB,MAA/C,GAAwDsF,SAAxD,GAAoE,IARrE,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,EAUA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,KAAKpD,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVA,EAWC,KAAKpC,KAAL,CAAWiB,aAAX,GACG,oBAAC,YAAD;AACA,MAAA,KAAK,EAAG,KAAKjB,KAAL,CAAWgB,YAAX,IAA2B,KADnC;AAEA,MAAA,QAAQ,EAAGhC,KAAD,IAAW;AACjB,aAAK4C,QAAL,CAAc;AAAEZ,UAAAA,YAAY,EAAE,CAAChC;AAAjB,SAAd;AACP,OAJG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAMG,IAjBJ,EAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBA,EAmBC,KAAKgB,KAAL,CAAWa,MAAX,GAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAArB,GAAyC,IAnB1C,EAoBC,KAAKb,KAAL,CAAWkB,OAAX,GAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtB,GAA2C,IApB5C,EAqBA;AAAK,MAAA,KAAK,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlB,KAAL,CAAWc,IAAX,IAAmB,CAAC,KAAKd,KAAL,CAAWgB,YAA/B,GAA+C,KAAKmC,UAAL,EAA/C,GAAkE,IADvE,CArBA,EAwBC,KAAKnD,KAAL,CAAWc,IAAX,IAAmB,KAAKd,KAAL,CAAWgB,YAA9B,GAA6C,KAAK+C,UAAL,EAA7C,GAAiE,IAxBlE,CADJ,CAFJ,CAFJ,CADJ;AAoCH;;AA1QwC","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from \"../elements/header\";\r\nimport Sidebar from \"../elements/clientsidebar\";\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport { Button } from 'reactstrap';\r\nimport '../App.css';\r\nimport '../../node_modules/react-vis/dist/style.css';\r\nimport { Chart } from \"react-google-charts\";\r\nimport ToggleButton from 'react-toggle-button';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nconst areaString = `50Hertz CA\r\nAmprion CA\r\nAPG CA\r\nAST BZ\r\nAST CA\r\nAustria\r\nBelgium\r\nBosnia Herzegovina\r\nBulgaria\r\nCEPS BZ\r\nCEPS CA\r\nCGES BZ\r\nCGES CA\r\nCREOS CA\r\nCroatia\r\nCyprus\r\nCyprus TSO BZ\r\nCyprus TSO CA\r\nCzech Republic\r\nDE-AT-LU\r\nDenmark\r\nDK1  BZ\r\nDK2 BZ\r\nEirGrid CA\r\nElering BZ\r\nElering CA\r\nELES BZ\r\nELES CA\r\nElia BZ\r\nElia CA\r\nEMS BZ\r\nEMS CA\r\nEnerginet CA\r\nESO BZ\r\nESO CA\r\nEstonia\r\nFingrid BZ\r\nFingrid CA\r\nFinland\r\nFormer Yugoslav Republic of Macedonia\r\nFrance\r\nGermany\r\nGreece\r\nHOPS BZ\r\nHOPS CA\r\nHungary\r\nIPTO BZ\r\nIPTO CA\r\nIreland\r\nIT-Centre-North BZ\r\nIT-Centre-South BZ\r\nIT-North BZ\r\nIT-Sardinia BZ\r\nIT-Sicily BZ\r\nIT-South BZ\r\nItaly\r\nItaly CA\r\nLatvia\r\nLitgrid BZ\r\nLitgrid CA\r\nLithuania\r\nLuxembourg\r\nMAVIR BZ\r\nMAVIR CA\r\nMEPSO BZ\r\nMEPSO CA\r\nMontenegro\r\nNational Grid BZ\r\nNational Grid CA\r\nNetherlands\r\nNO1 BZ\r\nNO2 BZ\r\nNO3 BZ\r\nNO4 BZ\r\nNO5 BZ\r\nNorway\r\nNOS BiH BZ\r\nNOS BiH CA\r\nPoland\r\nPortugal\r\nPSE SA BZ\r\nPSE SA CA\r\nREE BZ\r\nREE CA\r\nREN BZ\r\nREN CA\r\nRomania\r\nRTE BZ\r\nRTE CA\r\nSE1 BZ\r\nSE2 BZ\r\nSE3 BZ\r\nSE4 BZ\r\nSEPS BZ\r\nSEPS CA\r\nSerbia\r\nSlovakia\r\nSlovenia\r\nSpain\r\nStatnett CA\r\nSvK CA\r\nSweden\r\nswissgrid BZ\r\nswissgrid CA\r\nSwitzerland\r\nTenneT GER CA\r\nTenneT NL BZ\r\nTenneT NL CA\r\nTranselectrica BZ\r\nTranselectrica CA\r\nTransnetBW CA\r\nUkraine\r\nUkraine BEI CA\r\nUkraine BZN\r\nUkraine IPS CA\r\n`;\r\n\r\nconst t = areaString.split('\\n');\r\n\r\nvar areaOption=[];\r\nfor (const x in t){\r\n    areaOption.push( {value:t[x] , label:t[x]} );\r\n}\r\n\r\nconst productionTypes = `AC Link\r\nBiomass\r\nDC Link\r\nFossil Brown coal/Lignite\r\nFossil Coal-derived gas\r\nFossil Gas\r\nFossil Hard coal\r\nFossil Oil\r\nFossil Oil shale\r\nFossil Peat\r\nGeothermal\r\nHydro Pumped Storage\r\nHydro Run-of-river and poundage\r\nHydro Water Reservoir\r\nMarine\r\nNuclear\r\nOther\r\nOther renewable\r\nSolar\r\nSubstation\r\nTransformer\r\nWaste\r\nWind Offshore\r\nWind Onshore`;\r\n\r\nconst t2 = productionTypes.split('\\n');\r\nvar productionOption=[];\r\nfor (const x in t2){\r\n    productionOption.push( {value:t2[x] , label:t2[x]} );\r\n}\r\n\r\nconst datasetOptions = [\r\n    { value: 'ActualTotalLoad', label: 'Actual Total Load' },\r\n    { value: 'AggregatedGenerationPerType', label: 'Aggregated Generation' },\r\n    { value: 'DayAheadTotalLoadForecast', label: 'Day Ahead Total Load' },\r\n    { value: 'ActualvsForecast', label: 'Actual vs Forecast' },\r\n  ];\r\n\r\nconst typeOption = [\r\n    { value: 'Date', label: 'Day' },\r\n    { value: 'Month', label: 'Month' },\r\n    { value: 'Year', label: 'Year' }\r\n  ];\r\n\r\nconst yearOption = [\r\n    { value: '2014', label: '2014' },\r\n    { value: '2015', label: '2015' },\r\n    { value: '2016', label: '2016' },\r\n    { value: '2017', label: '2017' },\r\n    { value: '2018', label: '2018' },\r\n    { value: '2019', label: '2019' },\r\n    { value: '2020', label: '2020' }\r\n];\r\n\r\nvar monthOption = [\r\n    { value: '1', label: '1' },\r\n    { value: '2', label: '2' },\r\n    { value: '3', label: '3' },\r\n    { value: '4', label: '4' },\r\n    { value: '5', label: '5' },\r\n    { value: '6', label: '6' },\r\n    { value: '7', label: '7' },\r\n    { value: '8', label: '8' },\r\n    { value: '9', label: '9' },\r\n    { value: '10', label: '10' },\r\n    { value: '11', label: '11' },\r\n    { value: '12', label: '12' }\r\n]\r\nvar dayOption=[];\r\nfor (var i=1;i<32;i++){\r\n    dayOption.push( {value:i.toString() , label:i.toString()} );\r\n}\r\n\r\nconst frequencyOption = [\r\n    { value: 'PT15M', label: 'PT15M' },\r\n    { value: 'PT30M', label: 'PT30M' },\r\n    { value: 'PT60M', label: 'PT60M' }\r\n];\r\n\r\n\r\n\r\n\r\n\r\nexport default class Index extends Component {\r\n    state = {\r\n        dataset: null,\r\n        type: null,\r\n        measurements: [],\r\n        titles : [],\r\n        year: null,\r\n        month: null,\r\n        day: null,\r\n        toDashboard: false,\r\n        isLoading: false,\r\n        frequency: null,\r\n        area : null,\r\n        prod : null,\r\n        noData : false,\r\n        data : false,\r\n        tableColumns : [],\r\n        displayChart : false,\r\n        displayToggle : false,\r\n        noQuota : false\r\n    };\r\n    \r\n    createURL = ()=> {\r\n        const m = this.state.month ? '-'+this.state.month : '';\r\n        const d = this.state.day ? '-'+this.state.day : '';\r\n        const p = this.state.prod ? this.state.prod+'/' :'';\r\n        const url = 'https://localhost:8765/energy/api/'+this.state.dataset+'/'+this.state.area+'/'+p+this.state.frequency+'/'+this.state.type.toLowerCase()+'/'+this.state.year+m+d;\r\n        return encodeURI(url);\r\n    }\r\n\r\n    handleDatasetChange = selectedOption => {\r\n        this.setState({ dataset:selectedOption['value'] });\r\n    };\r\n\r\n    handleTypeChange = selectedOption => {\r\n        this.setState({ type:selectedOption['value'] });\r\n        if(selectedOption['value'] === 'Year')\r\n            this.setState({ day:null,month:null });\r\n        else if (selectedOption['value'] === 'Month')\r\n            this.setState({ day:null });\r\n    };\r\n\r\n    handleYearChange = selectedOption => {\r\n        this.setState({ year:selectedOption['value'] });\r\n    };\r\n\r\n    handleMonthChange = selectedOption => {\r\n        this.setState({ month:selectedOption['value'] });\r\n    };\r\n\r\n    handleDayChange = selectedOption => {\r\n        this.setState({ day:selectedOption['value'] });\r\n        this.setState({})\r\n    };\r\n\r\n    handleFrequencyChange = selectedOption => {\r\n        this.setState({ frequency:selectedOption['value'] });\r\n    };\r\n\r\n    handleAreaChange = selectedOption => {\r\n        this.setState({ area:selectedOption['value'] });\r\n    };\r\n\r\n    handleProductionChange = selectedOption => {\r\n        this.setState({ prod:selectedOption['value'] });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        this.setState({ noData : false , data : false });\r\n        axios.get(this.createURL() , { headers: { 'x-observatory-auth': this.token}})\r\n            .then(response => {\r\n                const measurements = response.data;\r\n                this.setState({measurements : measurements , data : true});\r\n                this.setState({ tableColumns : Object.keys(measurements['0']) });\r\n                this.setState({displayToggle : true});\r\n            })\r\n            .catch(error => {\r\n                try{\r\n                    if(error.response.status === 403) this.setState({ noData : true });\r\n                    if(error.response.status === 402) this.setState({ noQuota : true })\r\n                }\r\n                catch(err){\r\n                    console.log(err);\r\n                    console.log(error);\r\n                }\r\n            });\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.token = sessionStorage.getItem('token');\r\n    }\r\n\r\n    printTable = ()=>{\r\n        var rows = this.state.measurements;\r\n        let columns = []\r\n        Object.keys(this.state.measurements['0']).map(x=>{\r\n            columns.push({ dataField:x , text:x });\r\n        });\r\n        const pagination = paginationFactory({\r\n            sizePerPage: 5,\r\n            sizePerPageList:[\r\n                {text: '5', value: 5},\r\n                {text: '10', value: 10}\r\n            ],\r\n            withFirstAndLast:false,\r\n            alwaysShowAllBtns:false\r\n        });\r\n\r\n        let res = <BootstrapTable keyField='id' data={rows} columns={columns} pagination={ pagination } />;\r\n        return res;\r\n    }\r\n\r\n    printChart = ()=> {\r\n        let xOffset = 2;\r\n        let yOffset = 1;\r\n        let xTitle = '';\r\n        let zTitle='';\r\n\r\n        if(this.state.dataset==='AggregatedGenerationPerType')\r\n            xOffset++;\r\n        else if(this.state.dataset==='ActualvsForecast'){\r\n            xOffset=3;\r\n            zTitle = 'Forecast';\r\n        }\r\n        if (this.state.type === 'Date'){\r\n            if(this.state.dataset !== 'ActualvsForecast'){\r\n                xOffset++;\r\n                yOffset++;\r\n            }\r\n            xTitle='Hour';\r\n        }\r\n        if(xTitle!=='Hour')\r\n            xTitle = Object.keys(this.state.measurements['0'])[Object.keys(this.state.measurements['0']).length-xOffset];\r\n        let yTitle = Object.keys(this.state.measurements['0'])[Object.keys(this.state.measurements['0']).length-yOffset];\r\n        let c = [];\r\n        c.push(xTitle);\r\n        c.push(yTitle);\r\n        if(zTitle!=='') c.push(zTitle);\r\n        let result=[c];\r\n\r\n        for(var x in this.state.measurements){\r\n            let c = [];\r\n            let dateTimeKey = Object.keys(this.state.measurements[x])[Object.keys(this.state.measurements[x]).length-xOffset] ;\r\n            let dateTime = this.state.measurements[x][dateTimeKey];\r\n            if(this.state.day !== null) dateTime = new Date(dateTime).getHours();\r\n            c.push(dateTime);\r\n            let valueKey = Object.keys(this.state.measurements[x])[Object.keys(this.state.measurements[x]).length-yOffset] ;\r\n            let value = this.state.measurements[x][valueKey];\r\n            c.push(value);\r\n            if(this.state.dataset === 'ActualvsForecast'){\r\n                let valueKey = Object.keys(this.state.measurements[x])[Object.keys(this.state.measurements[x]).length-yOffset-1] ;\r\n                let value = this.state.measurements[x][valueKey];\r\n                c.push(value);\r\n            }\r\n            result.push( c );          \r\n        }\r\n        console.log(result);\r\n        let r = <Chart\r\n        width={'1000'}\r\n        height={'500px'}\r\n        chartType=\"Bar\"\r\n        loader={<div>Loading Chart</div>}\r\n        data={result}\r\n        options={{\r\n            // Material design options\r\n            chart: {\r\n            title: yTitle,\r\n            subtitle: '',\r\n            },\r\n        }}\r\n        // For tests\r\n        rootProps={{ 'data-testid': '2' }}\r\n        />\r\n        return r;\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.toDashboard === true) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n\r\n        const datasetSelect= <Select\r\n        onChange={this.handleDatasetChange}\r\n        options={datasetOptions}\r\n        />;\r\n        const typeSelect = <Select\r\n        onChange={this.handleTypeChange}\r\n        options={typeOption}\r\n        />;\r\n        const yearSelect = <Select\r\n        onChange={this.handleYearChange}\r\n        options={yearOption}\r\n        />;\r\n        const monthSelect = <Select\r\n        onChange={this.handleMonthChange}\r\n        options={monthOption}\r\n        />;\r\n        const daySelect = <Select\r\n        onChange={this.handleDayChange}\r\n        options={dayOption}\r\n        />;\r\n        const frequencySelect = <Select\r\n        onChange={this.handleFrequencyChange}\r\n        options={frequencyOption}\r\n        />;\r\n        const areaSelect = <Select\r\n        onChange={this.handleAreaChange}\r\n        options={areaOption}\r\n        />;\r\n        const productionTypeSelect = <Select\r\n        onChange={this.handleProductionChange}\r\n        options={productionOption}\r\n        />;\r\n\r\n        const data = [\r\n            {x: 0, y: 8},\r\n            {x: 1, y: 5},\r\n            {x: 2, y: 4},\r\n            {x: 3, y: 9},\r\n            {x: 4, y: 1},\r\n            {x: 5, y: 7},\r\n            {x: 6, y: 6},\r\n            {x: 7, y: 3},\r\n            {x: 8, y: 2},\r\n            {x: 9, y: 0}\r\n          ];\r\n        \r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <div id=\"wrapper\">\r\n                    <Sidebar/>\r\n                    <div id=\"content-wrapper\">\r\n                        <div className=\"container-fluid\">\r\n                        {datasetSelect}\r\n                        {this.state.dataset !==null ? areaSelect : null}\r\n                        {this.state.dataset !==null && this.state.dataset === 'AggregatedGenerationPerType' ? productionTypeSelect : null}\r\n                        {this.state.dataset !== null ? frequencySelect : null }\r\n                        {this.state.dataset !== null ? typeSelect : null}\r\n                        {this.state.type !== null ? yearSelect : null }\r\n                        {this.state.type !==null && (this.state.type === 'Date' || this.state.type === 'Month' )? monthSelect : null}\r\n                        {this.state.type !==null && this.state.type === 'Date' ? daySelect : null}\r\n                        <br/>\r\n                        <Button variant=\"dark\" onClick={this.handleSubmit}>Search</Button>\r\n                        {this.state.displayToggle ? (\r\n                            <ToggleButton\r\n                            value={ this.state.displayChart || false }\r\n                            onToggle={(value) => {\r\n                                this.setState({ displayChart: !value })\r\n                        }}/>\r\n                        ) : null}\r\n                        <br/>\r\n                        {this.state.noData ? (<h1>No Data</h1>) : null}\r\n                        {this.state.noQuota ? (<h1>No Quota</h1>) : null}\r\n                        <div class='wrapperClasses'>\r\n                            {this.state.data && !this.state.displayChart ? (this.printTable()):null}\r\n                        </div>\r\n                        {this.state.data && this.state.displayChart ? this.printChart() : null}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}