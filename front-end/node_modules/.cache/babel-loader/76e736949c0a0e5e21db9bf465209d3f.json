{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miniala\\\\Desktop\\\\TL19-48\\\\front-end\\\\src\\\\pages\\\\login.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport TitleComponent from \"./title\";\nimport https from 'https';\nimport qs from \"qs\";\nimport ReactDOMServer from 'react-dom/server';\nexport default class Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Username: '',\n      password: '',\n      redirect: false,\n      authError: false,\n      isLoading: false\n    };\n\n    this.handleUsernameChange = event => {\n      this.setState({\n        Username: event.target.value\n      });\n    };\n\n    this.handlePwdChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n      axios({\n        method: 'post',\n        url: 'https://localhost:8765/energy/api/Login',\n        data: qs.stringify({\n          username: this.state.Username,\n          password: this.state.password\n        }),\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n        },\n        httpsAgent: new https.Agent({\n          rejectUnauthorized: false\n        })\n      }).then(result => {\n        console.log(result.data.token);\n        console.log(result.data.admin);\n\n        if (result.data.token) {\n          sessionStorage.setItem('token', result.data.token);\n          sessionStorage.setItem('user_status', result.data.admin);\n          this.setState({\n            redirect: true,\n            isLoading: false\n          });\n          sessionStorage.setItem('isLoggedIn', true);\n        }\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          authError: true,\n          isLoading: false\n        });\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        if (ReactDOMServer.renderToString(sessionStorage.getItem('user_status')) === 'true') {\n          return React.createElement(Redirect, {\n            to: \"admin/dashboard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n        } else {\n          return React.createElement(Redirect, {\n            to: \"client/dashboard\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TitleComponent, {\n      title: \"Voltron \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card card-login mx-auto mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control \" + (this.state.authError ? 'is-invalid' : ''),\n      id: \"inputUsername\",\n      placeholder: \"Username \",\n      type: \"text\",\n      name: \"Username\",\n      onChange: this.handleUsernameChange,\n      autoFocus: true,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"inputUsername\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Username \"), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Please provide a valid Username.\"))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-label-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control \" + (this.state.authError ? 'is-invalid' : ''),\n      id: \"inputPassword\",\n      placeholder: \"******\",\n      name: \"password\",\n      onChange: this.handlePwdChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"inputPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Please provide a valid Password.\"))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      type: \"submit\",\n      disabled: this.state.isLoading ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Login \\xA0\\xA0\\xA0\", isLoading ? React.createElement(\"span\", {\n      className: \"spinner-border spinner-border-sm\",\n      role: \"status\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))))), this.renderRedirect());\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Miniala/Desktop/TL19-48/front-end/src/pages/login.js"],"names":["React","Component","axios","Link","Redirect","TitleComponent","https","qs","ReactDOMServer","Login","state","Username","password","redirect","authError","isLoading","handleUsernameChange","event","setState","target","value","handlePwdChange","handleSubmit","preventDefault","method","url","data","stringify","username","headers","httpsAgent","Agent","rejectUnauthorized","then","result","console","log","token","admin","sessionStorage","setItem","catch","error","renderRedirect","renderToString","getItem","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,OAAOC,cAAP,MAA2B,SAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,MAAMC,KAAN,SAAoBR,SAApB,CAA8B;AAAA;AAAA;AAAA,SAEzCS,KAFyC,GAEjC;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,QAAQ,EAAE,KAHN;AAIJC,MAAAA,SAAS,EAAE,KAJP;AAKJC,MAAAA,SAAS,EAAE;AALP,KAFiC;;AAAA,SAUzCC,oBAVyC,GAUlBC,KAAK,IAAI;AAC5B,WAAKC,QAAL,CAAc;AAACP,QAAAA,QAAQ,EAAEM,KAAK,CAACE,MAAN,CAAaC;AAAxB,OAAd;AACH,KAZwC;;AAAA,SAazCC,eAbyC,GAavBJ,KAAK,IAAI;AACvB,WAAKC,QAAL,CAAc;AAACN,QAAAA,QAAQ,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAAxB,OAAd;AACH,KAfwC;;AAAA,SAiBzCE,YAjByC,GAiB1BL,KAAK,IAAI;AACpBA,MAAAA,KAAK,CAACM,cAAN;AACA,WAAKL,QAAL,CAAc;AAACH,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACAb,MAAAA,KAAK,CAAC;AACFsB,QAAAA,MAAM,EAAE,MADN;AAEFC,QAAAA,GAAG,EAAE,yCAFH;AAGFC,QAAAA,IAAI,EAAEnB,EAAE,CAACoB,SAAH,CAAa;AACfC,UAAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWC,QADN;AAEfC,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFN,SAAb,CAHJ;AAOFiB,QAAAA,OAAO,EAAC;AACJ,0BAAgB;AADZ,SAPN;AASFC,QAAAA,UAAU,EAAE,IAAIxB,KAAK,CAACyB,KAAV,CAAgB;AACxBC,UAAAA,kBAAkB,EAAE;AADI,SAAhB;AATV,OAAD,CAAL,CAaKC,IAbL,CAaUC,MAAM,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACR,IAAP,CAAYW,KAAxB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACR,IAAP,CAAYY,KAAxB;;AACA,YAAIJ,MAAM,CAACR,IAAP,CAAYW,KAAhB,EAAuB;AACnBE,UAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCN,MAAM,CAACR,IAAP,CAAYW,KAA5C;AACAE,UAAAA,cAAc,CAACC,OAAf,CAAuB,aAAvB,EAAsCN,MAAM,CAACR,IAAP,CAAYY,KAAlD;AACA,eAAKpB,QAAL,CAAc;AAACL,YAAAA,QAAQ,EAAE,IAAX;AAAiBE,YAAAA,SAAS,EAAE;AAA5B,WAAd;AACAwB,UAAAA,cAAc,CAACC,OAAf,CAAuB,YAAvB,EAAqC,IAArC;AACH;AACJ,OAtBL,EAuBKC,KAvBL,CAuBWC,KAAK,IAAI;AACZP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,aAAKxB,QAAL,CAAc;AAACJ,UAAAA,SAAS,EAAE,IAAZ;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAd;AACH,OA1BL;AA2BH,KA/CwC;;AAAA,SAiDzC4B,cAjDyC,GAiDxB,MAAM;AACnB,UAAI,KAAKjC,KAAL,CAAWG,QAAf,EAAyB;AACrB,YAAGL,cAAc,CAACoC,cAAf,CAA8BL,cAAc,CAACM,OAAf,CAAuB,aAAvB,CAA9B,MAAyE,MAA5E,EAAmF;AAC/E,iBAAO,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,SAFD,MAGI;AACA,iBAAO,oBAAC,QAAD;AAAU,YAAA,EAAE,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;AAEJ,KA3DwC;AAAA;;AA6DzCC,EAAAA,MAAM,GAAG;AACL,UAAM/B,SAAS,GAAG,KAAKL,KAAL,CAAWK,SAA7B;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKO,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAE,mBAAmB,KAAKZ,KAAL,CAAWI,SAAX,GAAuB,YAAvB,GAAsC,EAAzD,CAAlB;AAAgF,MAAA,EAAE,EAAC,eAAnF;AAAmG,MAAA,WAAW,EAAC,WAA/G;AAA2H,MAAA,IAAI,EAAC,MAAhI;AAAuI,MAAA,IAAI,EAAC,UAA5I;AAAuJ,MAAA,QAAQ,EAAE,KAAKE,oBAAtK;AAA4L,MAAA,SAAS,MAArM;AAAsM,MAAA,QAAQ,MAA9M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAHJ,CADJ,CADJ,EAUI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAE,mBAAmB,KAAKN,KAAL,CAAWI,SAAX,GAAuB,YAAvB,GAAsC,EAAzD,CAAlC;AAAgG,MAAA,EAAE,EAAC,eAAnG;AAAmH,MAAA,WAAW,EAAC,QAA/H;AAAwI,MAAA,IAAI,EAAC,UAA7I;AAAwJ,MAAA,QAAQ,EAAE,KAAKO,eAAvK;AAAwL,MAAA,QAAQ,MAAhM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAHJ,CADJ,CAVJ,EAmBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,2BAAlB;AAA8C,MAAA,IAAI,EAAC,QAAnD;AAA4D,MAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWK,SAAX,GAAuB,IAAvB,GAA8B,KAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACKA,SAAS,GACN;AAAM,MAAA,SAAS,EAAC,kCAAhB;AAAmD,MAAA,IAAI,EAAC,QAAxD;AAAiE,qBAAY,MAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,GAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJR,CADJ,CAnBJ,CADJ,CAFJ,CAFJ,EAoCG,KAAK4B,cAAL,EApCH,CADJ;AAwCH;;AAvGwC","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link, Redirect} from 'react-router-dom';\nimport TitleComponent from \"./title\";\nimport https from 'https';\nimport qs from \"qs\";\nimport ReactDOMServer from 'react-dom/server';\n\nexport default class Login extends Component {\n\n    state = {\n        Username: '',\n        password: '',\n        redirect: false,\n        authError: false,\n        isLoading: false\n    };\n\n    handleUsernameChange = event => {\n        this.setState({Username: event.target.value});\n    };\n    handlePwdChange = event => {\n        this.setState({password: event.target.value});\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.setState({isLoading: true});\n        axios({\n            method: 'post',\n            url: 'https://localhost:8765/energy/api/Login',\n            data: qs.stringify({\n                username: this.state.Username,\n                password: this.state.password\n            }),\n            headers:{\n                'content-type': 'application/x-www-form-urlencoded;charset=utf-8'},\n            httpsAgent: new https.Agent({\n                rejectUnauthorized: false\n            })\n        })\n            .then(result => {\n                console.log(result.data.token);\n                console.log(result.data.admin);\n                if (result.data.token) {\n                    sessionStorage.setItem('token', result.data.token);\n                    sessionStorage.setItem('user_status', result.data.admin);\n                    this.setState({redirect: true, isLoading: false});\n                    sessionStorage.setItem('isLoggedIn', true);\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({authError: true, isLoading: false});\n            });\n    };\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n            if(ReactDOMServer.renderToString(sessionStorage.getItem('user_status')) === 'true'){\n                return <Redirect to='admin/dashboard'/>\n            }\n            else{\n                return <Redirect to='client/dashboard'/> \n            }\n        }\n        \n    };\n\n    render() {\n        const isLoading = this.state.isLoading;\n        return (\n            <div className=\"container\">\n                <TitleComponent title=\"Voltron \"></TitleComponent>\n                <div className=\"card card-login mx-auto mt-5\">\n                    <div className=\"card-header\">Login</div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-group\">\n                                <div className=\"form-label-group\">\n                                    <input className={\"form-control \" + (this.state.authError ? 'is-invalid' : '')} id=\"inputUsername\" placeholder=\"Username \" type=\"text\" name=\"Username\" onChange={this.handleUsernameChange} autoFocus required/>\n                                    <label htmlFor=\"inputUsername\">Username </label>\n                                    <div className=\"invalid-feedback\">\n                                        Please provide a valid Username.\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"form-label-group\">\n                                    <input type=\"password\" className={\"form-control \" + (this.state.authError ? 'is-invalid' : '')} id=\"inputPassword\" placeholder=\"******\" name=\"password\" onChange={this.handlePwdChange} required/>\n                                    <label htmlFor=\"inputPassword\">Password</label>\n                                    <div className=\"invalid-feedback\">\n                                        Please provide a valid Password.\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary btn-block\" type=\"submit\" disabled={this.state.isLoading ? true : false}>Login &nbsp;&nbsp;&nbsp;\n                                    {isLoading ? (\n                                        <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                                    ) : (\n                                        <span></span>\n                                    )}\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n              {this.renderRedirect()}\n            </div>\n        );\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}